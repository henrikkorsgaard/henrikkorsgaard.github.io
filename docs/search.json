[
  {
    "objectID": "pages/about.html",
    "href": "pages/about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "pages/things.html",
    "href": "pages/things.html",
    "title": "Things",
    "section": "",
    "text": "Recent things"
  },
  {
    "objectID": "pages/notes.html",
    "href": "pages/notes.html",
    "title": "Notes",
    "section": "",
    "text": "Recent notes"
  },
  {
    "objectID": "pages/research.html",
    "href": "pages/research.html",
    "title": "Henrik Korsgaard",
    "section": "",
    "text": "The following is a list of the publications I have co-authored together with collegues and collaborators. If you find anything interesting or have questions, then feel free to contact me. I welcome any form of discussion of my work.\n\nConference publications\n\n\n\nCollectives and their Artifact Ecologies\n\nHenrik Korsgaard, Peter Lyle, Joanna Saad-Sulonen, Clemens Klokmose, Midas Neuwens and Susanne Bødker\n\nProceedings of the ACM on Human-Computer Interaction 6 (CSCW2), 1-26 (2022)\n\n[PDF] [doi:10.1145/3555533]\n\n\n\nEfficiency and Care in Community-led Initiatives\n\nChiara Rossitto, Henrik Korsgaard, Airi Lampinen, Susanne Bødker\n\nProceedings of the ACM on Human-Computer Interaction 5 (CSCW2), 1-27 (2021)\n\n[PDF] [doi:10.1145/3479611]\n\n\n\nWhat’s the Situation with Situated Visualization? A Survey and Perspectives on Situatedness\n\nNathalie Bressa, Henrik Korsgaard, Aurélien Tabard, Steven Houben and Jo Vermeulen\n\nIEEE Transactions on Visualization and Computer Graphics 28 (1), 107-117 (2021)\n\n[PDF] [doi:10.1109/TVCG.2021.3114835]\n\n\n\nWhat’s in a Pattern: A Vocabulary to Articulate Group Routines and Practices\n\nSusanne Bødker, Henrik Korsgaard and Peter Lyle\n\nC&T’21: Proceedings of the 10th International Conference on Communities & Technologies (2021)\n\n[PDF] [doi:110.1145/3461564.3461570]\n\n\n\nWhat’s in an ecology? A review of artifact, communicative, device and information ecologies\n\nPeter Lyle, Henrik Korsgaard and Susanne Bødker\n\nProceedings of the 11th Nordic Conference on Human-Computer Interaction (2020)\n\n[PDF] [doi:10.1145/3419249.3420185]\n\n\n\nCollaborative Writing Across Multiple Artifact Ecologies\n\nIda Larsen-Ledet, Henrik Korsgaard and Susanne Bødker\n\nProceedings of the 2020 CHI Conference on Human Factors in Computing Systems(2020)\n\n[PDF] [doi:10.1145/3313831.3376422]\n\n\n\nTerritorial Functioning in Collaborative Writing\n\nIda Larsen-Ledet and Henrik Korsgaard\n\nComputer Supported Cooperative Work (CSCW) 28 (3), 391-433 (2019)\n\n[PDF] [doi:10.1007/s10606-019-09359-8]\n\n\n\nSketching and Ideation Activities for Situated Visualization Design\n\nNathalie Bressa, Kendra Wannamaker, Henrik Korsgaard, Wesley Willett and Jo Vermeulen\n\nProceedings of the 2019 on Designing Interactive Systems Conference (2019)\n\n[PDF] [doi:10.1145/3322276.3322326]\n\n\n\nWorking Across Boundaries in Smart City Research\n\nHenrik Korsgaard, Sarah-Kristin Theil, Vanessa Thomas and Titiana Ertiö\n\nProceedings of the 19th Annual International Conference on Digital Government Research (2018)\n\n[PDF] [doi:10.1145/3209281.3209315]\n\n\n\nPARTICIPATE: Capturing Knowledge in Public Library Activities\n\nCarla Gröschel, Peter Dalsgaard, Clemens N. Klokmose, Henrik Korsgaard, Eva Eriksson, Raphaëlle Bats, Aurélien Tabard, Alix Ducros and Sofia E. Serholt\n\nExtended Abstracts of the 2018 CHI Conference on Human Factors in Computing Systems (2018)\n\n[PDF] [doi:10.1145/3170427.3188605]\n\n\n\nPARTICIPATE: Capturing Knowledge in Public Library Activities\n\nCarla Gröschel, Peter Dalsgaard, Clemens N. Klokmose, Henrik Korsgaard, Eva Eriksson, Raphaëlle Bats, Aurélien Tabard, Alix Ducros and Sofia E. Serholt\n\nExtended Abstracts of the 2018 CHI Conference on Human Factors in Computing Systems (2018)\n\n[PDF] [doi:10.1145/3170427.3188605]\n\n\n\nProxemic Transitions: Designing Shape-changing Furniture for Informal Meetings\n\nJens Emil Grønbæk, Henrik Korsgaard, Marianne Graves Petersen, Morten Henriksen Birk and Peter Gall Krogh\n\nProceedings of the 2017 CHI conference on human factors in computing systems (2017)\n\n[PDF] [doi:10.1145/3025453.3025487]\n\n\n\nHappenstance, Strategies and Tactics: Intrinsic Design in a Volunteer-based Community\n\nSusanne Bødker, Henrik Korsgaard, Peter Lyle and Joanna Saad-Sulonen\n\nProceedings of the 9th Nordic Conference on Human-Computer Interaction (2016)\n\n[PDF] [doi:10.1145/2971485.2971564]\n\n\n\n\n‘A Farmer, a Place and at least 20 Members’: The Development of Artifact Ecologies in Volunteer-based Communities\n\nSusanne Bødker, Henrik Korsgaard and Joanna Saad-Sulonen\n\nProceedings of the 19th ACM Conference on Computer-Supported Cooperative Work & Social Computing\n\n[PDF] [doi:10.1145/3555533]"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Henrik Korsgaard",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.\nSometimes, it is required to fit an image into a certain given dimension. We can resize the image by specifying the width and height of an image. A common solution is to use the max-width: 100%; and height: auto; so that large images do not exceed the width of their container. The max-width and max-height properties of CSS works better, but they are not supported in many browsers.\nAnother way of resizing the image is by using the object-fit property, which fits the image. This CSS property specifies how a video or an image is resized to fit its content box. It defines how an element fits into the container with an established width and height.\nThe object-fit property is generally applied to image or video. This property defines how an element responds to the width and height of its container. Mainly there are five values of object-fit property such as fill, contain, cover, none, scale-down, initial, and inherit. The default value of this property is “fill”. Example\nIn this example, we are resizing the image by using the max-width: 100%; and height: auto; properties. Sometimes, it is required to fit an image into a certain given dimension. We can resize the image by specifying the width and height of an image. A common solution is to use the max-width: 100%; and height: auto; so that large images do not exceed the width of their container. The max-width and max-height properties of CSS works better, but they are not supported in many browsers.\nAnother way of resizing the image is by using the object-fit property, which fits the image. This CSS property specifies how a video or an image is resized to fit its content box. It defines how an element fits into the container with an established width and height.\nThe object-fit property is generally applied to image or video. This property defines how an element responds to the width and height of its container. Mainly there are five values of object-fit property such as fill, contain, cover, none, scale-down, initial, and inherit. The default value of this property is “fill”. Example\nIn this example, we are resizing the image by using the max-width: 100%; and height: auto; properties. Sometimes, it is required to fit an image into a certain given dimension. We can resize the image by specifying the width and height of an image. A common solution is to use the max-width: 100%; and height: auto; so that large images do not exceed the width of their container. The max-width and max-height properties of CSS works better, but they are not supported in many browsers.\nAnother way of resizing the image is by using the object-fit property, which fits the image. This CSS property specifies how a video or an image is resized to fit its content box. It defines how an element fits into the container with an established width and height.\nThe object-fit property is generally applied to image or video. This property defines how an element responds to the width and height of its container. Mainly there are five values of object-fit property such as fill, contain, cover, none, scale-down, initial, and inherit. The default value of this property is “fill”. Example\nIn this example, we are resizing the image by using the max-width: 100%; and height: auto; properties."
  }
]