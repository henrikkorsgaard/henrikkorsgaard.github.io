---
title: "Should I Drive Now?"
bibliography:
 - ../references/hci.bib
csl: ../references/apa.csl
---
(The Danish title of the application and project was "Skal Jeg KÃ¸re Nu?")

::: {#fig-screenshots layout-ncol=4}

![](/public/images/sjkn/frontpage4inch.png){#fig-1}

![](/public/images/sjkn/response_yes4inch.png){#fig-2}

![](/public/images/sjkn/response_maybe4Inch.png){#fig-3}

![](/public/images/sjkn/hotspots4inch.png){#fig-4}

Screenshots from the IoS app. (a) Front-page and primary interaction, (b) "yes" recommendation, (c)"maybe" recommendation, (d) hotspot map.
:::

The road systems and traffic infrastructure is highly instrumented with devices to capture data on flow, incidents, congestion etc. These data are used by the planning departments and vendors to develop their strategy and measure and respond to changes in traffic patterns. In this project, we wanted to investigate a use-case for some of this data as open data: _How could we develop an application that could support citizens in their daily lives based on open data_? or more specifically _how could citizens interact more or less directly with urban data?_. 

The answer was an application where users could query live traffic data and receive driving recommendations based on congestion and flow data. The screenshots above illustrate the flow of the application: First, (@fig-1), the user selects a predefined destination, e.g. work, and then queries the service by pressing the "Should I Drive Now?" button. Then (@fig-2 and @fig-3) the service would calculate the commute time between the current location and chose destination based on real-time traffic data. Then it compares the current commute time with a precalculated ideal (normal traffic flow). If the delta was acceptable, the recommendation would be _"yes"_. If the route is congested, the application would recommend _"maybe"_, with some detailed information on specific hotspots and a recommendation on _"perhaps wait 15 minutes to depart"_. If there is a gridlock, the application would recommend similar to _"maybe"_, but add a recommendation to change commute patterns for subsequent days, e.g. _"if you can schedule your drive early next time, then you can avoid congestion"_.

As an additional feature (and to provide an explanation), users could also see a map with hotspots on the current traffic situation (@fig-4)

## Smart city and open data context
This project also served as a deliverable and demonstrator in a local smart city initiative [Smart Aarhus](https://smart.aarhus.dk/)^[Back then it was a strong helix collaboration between the municipality, university, region and private sector. I have not followed it for years, but today it seems more like a municipal project with a more traditional governmental focus (and less experimental and engaging).]. I was a member of the secrateriat and working group on open data. 

In this context, the application should demonstrate 

- A locally developed "Smart City" application
- A use-case for open data
- An internal instrument^[This proved to be the main contribution and role for the application. To show-case and give leverage to a few of the efforts in Smart Aarhus and the open data initiative. I throught me the strategic power of a demonstrator.] to motivate and understand the process of working with open data

As part of the development of the application, I developed some of the early integrations between the [Blip Systems real-time tracking software](https://services.crmservice.eu/raiminisite?a=9aAmADO60Q2odAwCKFRLDaHXBHRIA0ZiaW4274Oc8Gs=) and the CKAN open data platform. The data is still maintained and available on the, now Danish, [CKAN open data platform](https://www.opendata.dk/city-of-aarhus/realtids-trafikdata).

## Drive now application design
The development of the development of the project happened in close collaboration with people from the municipal traffic department and Smart Aarhus. The concept was developed during an inspiration card workshop [@halskov2006inspiration] and further refined through a series of design meetings. 

I was design lead and developer on the project, with frequent support and input from Smart Aarhus and the participants from the municipal traffic department.

Jacob Rosenberg developed the graphics for the interface and Martin Brynskov provided input on tricky design decisions and project management.

## Application implementation
This is the largest system I have developed independently, with quite a lot of components and steps. The container diagram below shows the different components. 

```{dot}
//| label: fig-container
//| fig-cap: Container View of the Drive now implementation.


digraph {
  compound=true
  graph [fontname="Arial", rankdir=TB, ranksep=1.0, nodesep=1.0]
  node [fontname="Arial", shape=box, margin="0.4,0.3"]
  edge [fontname="Arial"]

  { rank=same 1 }
  { rank=same 3 4 5 }
  { rank=same 7 8 }


  1 [id=1,shape=rect, label=<<font point-size="34">Citizen</font><br /><font point-size="19">[Person]</font><br /><br /><font point-size="24">A commuting citizen</font>>, style=filled, color="#052e56", fillcolor="#08427b", fontcolor="#ffffff"]
  7 [id=7,shape=rect, label=<<font point-size="34">Open Data Platform</font><br /><font point-size="19">[Software System]</font><br /><br /><font point-size="24">CKAN open data platform</font>>, style=filled, color="#6b6b6b", fillcolor="#999999", fontcolor="#ffffff"]
  8 [id=8,shape=rect, label=<<font point-size="34">GIS Distance API</font><br /><font point-size="19">[Software System]</font><br /><br /><font point-size="24">Provides distance and walking<br />time estimates from user<br />location to nearest departure<br />point.</font>>, style=filled, color="#6b6b6b", fillcolor="#999999", fontcolor="#ffffff"]

  subgraph cluster_2 {
    margin=25
    label=<<font point-size="24"><br />Drive Now Application</font><br /><font point-size="19">[Software System]</font>>
    labelloc=b
    color="#444444"
    fontcolor="#444444"
    fillcolor="#444444"

    3 [id=3,shape=rect, label=<<font point-size="34">Drive Now app</font><br /><font point-size="19">[Container: Objective-C]</font><br /><br /><font point-size="24">IoS Smartphone application</font>>, style=filled, color="#0b4884", fillcolor="#1168bd", fontcolor="#ffffff"]
    4 [id=4,shape=rect, label=<<font point-size="34">Backend service<br />providing<br />recommendations</font><br /><font point-size="19">[Container]</font><br /><br /><font point-size="24">Hiroku: Nodejs (Coffeescript)</font>>, style=filled, color="#0b4884", fillcolor="#1168bd", fontcolor="#ffffff"]
    5 [id=5,shape=cylinder, label=<<font point-size="34">GIS database</font><br /><font point-size="19">[Container: Postgresql PostGIS]</font><br /><br /><font point-size="24">Route measue point<br />information, precalculated<br />traveltimes</font>>, style=filled, color="#0b4884", fillcolor="#1168bd", fontcolor="#ffffff"]
  }

  3 -> 4 [id=11, label=<<font point-size="24">query congestion analysis<br />service</font>>, style="dashed", color="#707070", fontcolor="#707070"]
  4 -> 5 [id=12, label=<<font point-size="24">query route segments</font>>, style="dashed", color="#707070", fontcolor="#707070"]
  4 -> 7 [id=13, label=<<font point-size="24">query live data</font>>, style="dashed", color="#707070", fontcolor="#707070"]
  4 -> 8 [id=15, label=<<font point-size="24">resolve address</font>>, style="dashed", color="#707070", fontcolor="#707070"]
  7 -> 4 [id=17, label=<<font point-size="24">provide live data</font>>, style="dashed", color="#707070", fontcolor="#707070"]
  3 -> 1 [id=19, label=<<font point-size="24">Provide recommendation and<br />location data</font>>, style="dashed", color="#707070", fontcolor="#707070"]
  1 -> 3 [id=9, label=<<font point-size="24">Citizen ask for driving<br />recommendations</font>>, style="dashed", color="#707070", fontcolor="#707070"]
}
```

For this project, I had to learn almost all the technologies from the get-go, including Objective-C, working with GIS data, Postgresql PostGIS module, Hiroku and to some extend CoffeeScript (I had only worked in NodeJS of the two at the time). Deploying the application to Hiroku and Apple's appstore was also an experience. Apple's application review procedure was just _different_ back then.

I got several requests on making an Android version of the application, but at that point the project did not have any additional funding. I started developing it, but it was just not feasible at the time. 

<!--
https://structurizr.com/dsl
workspace {

    model {
        user = person "Citizen" "A commuting citizen"
       
        
        softwareSystem = softwareSystem "Drive Now Application" "Software system" {
            app = container "Drive Now APP" "IoS Smartphone application" "Objective-C"
            backend = container "Backend service providing recommendations" "Hiroku: Nodejs (Coffeescript)"
            db = container "GIS database" "Route measue point information, precalculated traveltimes" "Postgresql PostGIS" "Database"
        }
        
      
        blipSystems = softwareSystem "Blip Systems BlipTrack system" "Interface to the real-time traffic data IoT infrastructure" "existing system"
        ckan = softwareSystem "Open Data Platform" "CKAN open data platform" "existing system"
        gisService = softwareSystem "GIS Distance API"  "Provides distance and walking time estimates from user location to nearest departure point." "existing system"
        
        
        user -> app "Citizen ask for driving recommendations"
        app -> backend "query congestion analysis service"
        backend -> db "query route segments"
        backend -> ckan "query live data"
        backend -> gisService "resolve address"
        ckan -> backend "provide live data"
        app -> user "Provide recommendation and location data"
        
        ckan -> blipSystems "Update traffic data every 5 minutes"

    }

    views {
        systemContext softwareSystem "SystemContext" {
            include *
            autoLayout
        }
        
         container softwaresystem "Containers" {
            include *
            autoLayout
        }

        styles {
            element "Software System" {
                background #1168bd
                color #ffffff
            }
            element "Person" {
                shape person
                background #08427b
                color #ffffff
            }
            
            element "Container" {
                background #1168bd
                color #ffffff
            }
            
            element "Database" {
                shape Cylinder
            }
            
            
            element "existing system" {
                background #999999
                color #ffffff
            }
        }
    }
}
-->


## Outcomes and publication
The application proved useful to commuting citizens; on its release in 2014, it got almost 5000 downloads and unique users in the first six months. The underlying real-time traffic data was made available through the local data platform as part of the project and is [still available today](https://www.opendata.dk/city-of-aarhus/realtids-trafikdata).

There is more about the project in my Master thesis ["Digital Urban Development: Reconceptualising the Smart City as a Design Challenge from an Interaction Design Perspective"]("/public/pdfs/thesis.pdf). We also discuss it in our paper on ["Working Across Boundaries in Smart City Research"](/public/pdfs/working-across-boundaries-smart-city.pdf)

### Press
Danish news published multiple pieces on the project, e.g. [Ing.dk](https://ing.dk/artikel/ny-app-finder-den-hurtigste-vej-gennem-myldretiden-med-wifi-og-bluetooth-166097) and [Stiftidende](https://stiften.dk/aarhus/aarhus-laver-skal-jeg-koere-nu-app), it was on the local news and was part of a larger [PR event for Smart Aarhus](https://newsroom.au.dk/nyheder/vis/artikel/forskere-havde-gave-med-da-smart-aarhus-fyldte-aar/), see [this short pamphlet from Aarhus municipalit](/public/pdfs/AarhusKommuneSJKN.pdf).